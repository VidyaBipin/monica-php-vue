steps:
- bash: |
    scripts/ci/rebase.sh
  displayName: 'Rebase sources'

- bash: |
    echo "SONAR_TOKEN2=`echo ${SONAR_TOKEN2} | head -c 2`"
    echo "SONAAR_TOKEN2=`echo ${SONAAR_TOKEN2} | head -c 2`"
    test "$SONAR_TOKEN2" == '$(SONAR_TOKEN)' && { echo "Fix SONAR_TOKEN2"; SONAR_TOKEN2=; }
    test "$SONAAR_TOKEN2" == '$(Sonaar.Token)' && { echo "Fix SONAAR_TOKEN2"; SONAAR_TOKEN2=; }
    echo "SONAR_TOKEN2=`echo ${SONAR_TOKEN2} | head -c 2`"
    echo "SONAAR_TOKEN2=`echo ${SONAAR_TOKEN2} | head -c 2`"
  displayName: 'Fix secret variables'
  env:
    SONAR_TOKEN2: $(SONAR_TOKEN)
    SONAAR_TOKEN2: $(Sonaar.Token)

- bash: |
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
    php -version
  displayName: 'Set php version'

- bash: |
    mkdir -p results/coverage
    sed 's/DB_TEST_PASSWORD=/DB_TEST_PASSWORD=root/' scripts/tests/.env.mysql > .env
    touch .sentry-release
  displayName: 'Prepare environment'
