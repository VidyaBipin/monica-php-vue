name: Chrome headless

on:
  push:
    branches-ignore:
      - 'l10n_master*'
      - '3.x*'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: monica
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-version: [7.3]
        browser: [chrome]
        containers: [1]
      max-parallel: 10
    name: Cypress Test with PHP ${{ matrix.php-version }} browser ${{ matrix.browser }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m

    # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer files
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --no-suggest --ignore-platform-reqs

    # Node.js
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install npm dependencies
        run: npm install
      - name: Build npm assets
        run: npm run prod

    # Prepare
      - name: Prepare environment
        run: |
          mkdir -p results/coverage
          cp tests/.env.ci.sqlite .env
      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate
      - name: Run seeds
        run: php artisan db:seed --no-interaction -vvv

    # Cypress
      - name: Cypress verify
        run: npm run cy:verify

      - name: which google-chrome
        run: |
          which google-chrome || true
      - uses: cypress-io/github-action@v1
        with:
          start: php artisan serve
          browser: ${{ matrix.browser }}
          headless: true
          record: true
          parallel: true
          group: Azure DevOps CI ${{ matrix.browser }}
          config: baseUrl=http://localhost:8000
          wait-on: http://localhost:8000
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Store results
#      uses: actions/upload-artifact@v1
#      with:
#        name: results
#        path: results/junit/cypress/results*.xml
