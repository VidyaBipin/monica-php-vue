name: Chrome headless

on: [push]

jobs:
  cypress-run:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.3']
        containers: [1, 2, 3, 4, 5, 6, 7, 8]
      max-parallel: 10

    steps:
    - uses: actions/checkout@v1

    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@master
      with:
        php-version: ${{ matrix.php-version }}
        coverage: none
    - name: Check PHP Version
      run: php -v
    - name: Check Composer Version
      run: composer -V
    - name: Check PHP Extensions
      run: php -m

    # step-prepare-environment
    - name: Prepare environment
      run: |
        mkdir -p results/coverage
        cp scripts/ci/.env.mysql .env
        touch .sentry-release
        echo "REQUIRES_SUBSCRIPTION=true" >> .env

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache composer files
      uses: actions/cache@v1
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer install --no-interaction --no-suggest --ignore-platform-reqs

    # step-prepare-db
    - uses: samin/mysql-action@v1
      with:
        mysql version: '5.7'
        mysql database: 'monica'
        mysql user: 'root'
        mysql password: ''
    - name: Prepare db
      run: mysql -u root -p  monica < scripts/database.test.sql
    - name: Run migration scripts
      run: php artisan migrate --no-interaction -vvv

    # step-seed-test-db
    - name: Seed database
      run: |
        php artisan db:seed --no-interaction -vvv
        php artisan passport:keys --no-interaction -vvv

    - name: yarn install
      run: yarn inst
    - name: Cypress verify
      run: npm run cy:verify

    - name: Run http server
      run: php artisan serve &

    - uses: cypress-io/github-action@v1
      with:
        browser: chrome
        headless: true
        record: true
        parallel: true
        group: Azure DevOps CI
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
