name: Test with sqlite

on: [push]

jobs:
  tests:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-version: [7.4]

    steps:
      - uses: actions/checkout@v1

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
      - name: Check PHP Version
        run: php -v
      - name: Check Composer Version
        run: composer -V
      - name: Check PHP Extensions
        run: php -m

    # Composer
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer files
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            ${{ runner.os }}-composer-

      - name: Install composer dependencies
        run: composer install --no-interaction --no-suggest --ignore-platform-reqs

    # Node.js
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install npm dependencies
        run: npm install
      - name: Build npm assets
        run: npm run prod

    # Prepare
      - name: Prepare environment
        run: cp tests/.env.ci.sqlite .env
      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Generate key
        run: php artisan key:generate

      - name: Run migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan migrate
      - name: Run seeds
        run: php artisan db:seed --no-interaction -vvv

    # Test
      - name: Run test suite
        run: phpdbg -dmemory_limit=4G -qrr vendor/bin/phpunit -c phpunit.xml --log-junit ./results/junit/results.xml --coverage-clover ./results/coverage.xml
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite

      - name: Store results
        if: matrix.php-version == '7.4' && matrix.operating-system == 'ubuntu-latest'
        uses: actions/upload-artifact@v1
        with:
          name: results
          path: results

  reporting:
    needs: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['7.4']

    steps:
    - uses: actions/checkout@v1

    - name: Download results
      uses: actions/download-artifact@v1
      with:
        name: results

    - name: Fix coverage
      run: sed -i -e "s%$GITHUB_WORKSPACE/%%g" results/coverage.xml

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
